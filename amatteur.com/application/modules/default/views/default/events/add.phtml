<?php echo $this->header_part; ?>

<div id="detail" class="editprofile"> <!-- style="background-color:white;padding-left: 20px;padding-right: 20px"-->
	<div id="view-profile">
                <label style="font-size: 2.8em;
font-weight: 300;
line-height: 1em;
color:#0061A5;
float:left;"> 
                    <image src="data/images/event_calendar.png" >&nbsp;<strong><?php echo $this->translate('Añadir / Editar Evento Deportivo ');?> </strong></label>		

            <div>
                

                
		<form name="profileEdit" accept-charset="utf-8" method="post" action="" class="Form StaticForm" id="profileEdit">

                <input type='hidden' id='user_id' name='user_id' value="<?php echo $this->user_id;?>"/>
                    
            <!--h3><?php echo $this->translate('Edit Profile');?></h3-->

            <ul>

                <!-- Event Name -->
                <li>
                    <label for="id_eventname"><?php echo $this->translate('Nombre del evento');?></label>
                    <div class="Right">
                        <input type="text" id="id_eventname" value="<?php echo $this->eventname;?>" name="eventname">
                        <span style="color:red">*</span>
                        <span class="help_text"><?php echo $this->translate('Max 60 caracteres');?></span>
                    </div>
                </li>

                <div id="create-board" class="Form StaticForm" style="padding-left:0px;" >
                    <ul style="margin:0px;">

                        <!-- Deportes -->
                        <li style="border:0px">
                            <label for="category_id-select<?php echo ($this->is_edit?'-edit':'');?>"><?php echo $this->translate('Deporte');?></label>
                            <div class="Right" id='catList'>

                                 <a href="" class='selectBox selectBox-dropdown' id='selectBox-Category1' style='width: 352px; display: inline-block;'>
                                        <?php if(!$this->cat_title){?>
                                                 <span class='selectBox-label' id='selectBox-label-Category1' style="width: 352px;"><?php echo  $this->translate('Please choose sport');?></span>
                                        <?php }else{?>
                                                <span class='selectBox-label' id='selectBox-label-Category1' style="width: 352px;"><?php echo  $this->cat_title;?></span>
                                        <?php }?>
                                         <span class="selectBox-arrow" style=""></span>
                                 </a>

                                 <ul class='selectBox-dropdown-menu selectBox-options' id='selectBox-dropdown-menu-Category1' style='display:none;overflow-x: hidden;width: 370px;'>

                                        <?php $i=0; foreach($this->categories as $category) { ?>
                                                <li  class = 'master cat1' style='border:none !important' >
                                                        <?php if ($i==0) { $i=1; ?>
                                                        <a data-id='<?php echo 1; ?>' href="" class='cats-category1' style='color:#AAA;' ><?php echo "Todo"; ?></a>
                                                        <ul class='subcats hidden'><li style='border:none !important;padding-left:0px'></li></ul>
                                                        <?php } ?>

                                                        <a data-id='<?php echo $category['category_id'];?>' href="" class='cats-category1' style='color:#AAA;' ><?php echo $category['title']?></a>
                                                        <?php if($category['subcategories']){?>
                                                                <ul class='subcats hidden'>
                                                                        <?php foreach($category['subcategories'] as $subcat){?>
                                                                                <li style='border:none !important;padding-left:0px'>
                                                                                        <a data-id='<?php echo $subcat['category_id']; ?>' class='' href=""><?php echo $subcat['title']?></a>
                                                                                </li>
                                                                        <?php }?>
                                                                </ul>
                                                        <?php }?>
                                                </li>
                                        <?php }?>
                                </ul>

                                <input type='hidden' id='catId1' name='sport_category' value = '<?php echo $this->sport_category;?>'/>
                                <span style="color:red">*</span>
                            </div>
                        </li>
                
                    </ul>
                </div>     
                
                <!-- Organiza -->
                <li>
                    <label for="id_organiza"><?php echo $this->translate('Organiza');?></label>
                    <div class="Right">
                        <input type="text" id="id_organiza" value="<?php echo $this->organiza;?>" name="organiza">
                        <span style="color:red">*</span>
                    </div>
                </li>

        <!--br/><br/><br/><br/><br/--><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>
                <!-- Location -->
                <li>
                    <label for="id_location"><?php echo $this->translate('Location');?></label>
                    <div class="Right">
                        <input type="text" id="searchTextField" value="<?php echo $this->location;?>" name="location">
                        <span style="color:red">*</span>
                        <span class="help_text"><?php echo $this->translate('Campo obligatorio para usuario profesional (Otros)');?></span>
                    </div>
                            <input type="hidden" name="lat" class="lat" id="lat" />
                            <input type="hidden" name="len" class="len" id="len" />
                    
                </li>
    <div id="map-canvas" style="display:none !important"></div>
                
                <!-- Date Time -->
                <li>
                    <label for="id_datetime"><?php echo $this->translate('Fecha y Hora');?></label>
                    <div class="Right">
                        <input type="text" id="date_event" value="<?php echo $this->date_event;?>" name="date_event" />
                        <span style="color:red">*</span>
                    </div>
                </li>

                <!-- Website -->
                <li>
                    <label for="id_website"><?php echo $this->translate('Web o Link relacionado');?></label>
                    <div class="Right">
                        <input type="text" id="id_website" value="<?php echo $this->website;?>" name="website">
                        
                    </div>
                </li>
                
                



                <!-- Image -->
                <li>
                    <label for="id_img"><?php echo $this->translate('Image');?></label>
                    <div class="Right">
                        
                        <div class="current_avatar_wrapper">
                          <img src="data/images/ajax-loader.gif" class="spinner" alt="<?php echo $this->translate('Loading...');?>" style="display: none;">
                          <img alt="<?php echo $this->translate('Foto del evento');?>" class="current_avatar floatLeft" src="<?php echo $this->avatar;?>">
                        </div>

                        <div style="padding-left: 12px;" class="floatLeft NoInput">
                            <a class="floatLeft Button WhiteButton Button18 change_avatar" href="#"><strong><?php echo $this->translate('Upload an Image');?></strong><span></span></a>
                            
                            <div class="clear"></div>
                        </div>
                    </div>
                </li>
                
                
                <!-- About -->
                <li>
                    <label for="id_about"><?php echo $this->translate('Detalles');?></label>
                    <div class="Right">
                        <textarea name="description" cols="54" rows="3" id="id_about" ><?php echo $this->description;?></textarea>
                        <span style="color:red">*</span>
                        <div id="aboutCount" class="CharacterCount"></div>
                            <span class="help_text"><?php echo $this->translate('Ayúdanos a conocer más detalles sobre el evento: Datos técnicos, Inscripción, Fecha límite, etc..');?></span>                        
                    </div>
                </li>

        
                <!-- Compartir -->
                <li>
                    <label for="id_compartir"><?php echo $this->translate('Compartir con'); ?></label>
                    <div id="compartirOptions" class="">
                        <label for="id_compartir_seguidores"><input <?php echo ($this->compartir == 'followers' ? 'checked="checked"' : ''); ?> type="radio" name="compartir" class="compartir" value="followers" id="id_compartir_seguidores"> <?php echo $this->translate('Mis Seguidores'); ?></label>
                        <label for="vacio" style="width:120px;"></label>
                        <label for="id_compartir_todos"><input <?php echo ($this->compartir == 'amatteur' ? 'checked="checked"' : ''); ?> type="radio" name="compartir" class="compartir" value="amatteur" id="id_compartir_todos"> <?php echo $this->translate('Todos'); ?></label>
                    </div>
                </li>  

                <!-- si es alta, no se puede cancelar -->
                <?php if ($this->edited) { ?>
			
                <!-- Cancel -->
                <li>
                    <label for="id_cancel"><?php echo $this->translate('Evento Cancelado');?></label>
                    <div id="genderOptions" class="Right">
                        <ul>
                                <li><label for="id_cancel"><input <?php echo ($this->cancel == '1' ? 'checked="checked"' : '');?> type="radio" name="cancel" value="1" id="id_cancel"></label></li>
                        </ul>
                        
                    </div>
                </li>
                
                <!-- Cancel Reason -->
                <li>
                    <label for="id_cancelReason"><?php echo $this->translate('Razón de la cancelación');?></label>
                    <div class="Right">
                        <input type="text" id="id_cancelReason" value="<?php echo $this->cancelReason;?>" name="cancelReason">
                    </div>
                </li>
                
                <?php } ?>

            </ul>

            <!-- Button -->
            <div class="Submit">
                <a onclick="$('#profileEdit').submit(); return false" class="Button WhiteButton RedButton Button24 userform_submit editpage_submit" href="#"><strong><?php echo $this->translate('Save Profile');?></strong></a>
            </div>
        </form>		

    </div>
            
    </div>
    <br/>
    <div>
        <label for="black"  style="font-size: 2.8em;
font-weight: 300;
line-height: 1em;
color:#0061A5;
float:left;"><?php echo $this->translate('Ayúdanos a que no se dupliquen los eventos.');?></label>
        <label for="black" style="color:#0061A5;
float:left;"><?php echo $this->translate('Por favor, verifica que tu evento no esté ya inscrito, recuerda que puedes añadir datos a eventos ya existentes. Explora los eventos abajo, al abrirse una pestaña nueva, los datos de tu formulario no se perderán. ¡Gracias!');?></label>
    </div>
    <div id="container" style="margin-left:0px">
        <?php echo $this->events;?>
    </div>
    
    
    <div class="clear"></div>    
</div>


<?php ob_start();?>

<script src="data/js/jquery-ui-timepicker-addon.js" type="text/javascript"></script>
<link rel="stylesheet" type="text/css" href="data/css/jquery-ui-timepicker-addon.css"/>

<script type="text/javascript">
$(document).ready(function(){
    
    

        $('#date_event').datetimepicker({
            dateFormat: 'dd/mm/yy',
            controlType: 'select'
        });


  
    

        $("#id_eventname").bind('focusout',function(event){
            search();
        });
        
        $("#id_eventname").change(function() {
            search();
        });
        
        $("#id_eventname").live('click',function(event){
            search();
        });

        $("#id_eventname").blur(function() {
            search();
        });
        
	function search() {
                val = $("#id_eventname").val();
		$.post('<?php echo $this->search_json;?>', {eventname: val}, function(data){
                    $("#container").html(data.events);
		},'json');
	}

	new AjaxUpload($('.StaticForm a.change_avatar'), {
		action: '<?php echo $this->form_action;?>',
		name: 'file',
		autoSubmit: true,
		responseType: 'json',
		onSubmit: function(file, extension) {
			$(".current_avatar_wrapper .spinner").show().css({opacity: 1});
			$(".current_avatar_wrapper .current_avatar").hide();
		},
		onComplete: function(file, json) {
			if (json.error) {
				Pins.error(json.error);
				$('.current_avatar_wrapper .current_avatar').show();
				$(".current_avatar_wrapper .spinner").hide().css({opacity: 0});
			} else if (json.success) {
				var image = new Image();
				image.src = json.success;
				image.onload = function(){
					$('.current_avatar_wrapper .current_avatar').attr('src', image.src).show();
					$(".current_avatar_wrapper .spinner").hide().css({opacity: 0});
				}
				image.onerror = function(){
					$('.current_avatar_wrapper .current_avatar').show();
					$(".current_avatar_wrapper .spinner").hide().css({opacity: 0});
				}
			}
		}
	});

	$('#id_dont_search_index').switcherSlider({
		text: {
			on: '<?php echo $this->translate('ON');?>',
			off: '<?php echo $this->translate('OFF');?>'
		}
	});

	

	<?php if($this->twitteroauth_enable) { ?>
	$('#twitter_connect').switcherSlider({
		text: {
			on: '<?php echo $this->translate('ON');?>',
			off: '<?php echo $this->translate('OFF');?>'
		},
		onSwitch: twitter_connect
	});

	function twitter_connect(item) {
		$.post('<?php echo $this->twitter_connect;?>', {twitter_connect: (item.checked?'on':'off')}, function(data){

			if(data.connected) {
				if(data.connected != (item.checked?'on':'off')) {
					$('#twitter_connect').switcherSlider( data.connected ? 'on_without_callback' : 'off_without_callback' );
				}

				
				if(data.connected == 'on') {
					window.location.reload();
				}
			} else if(data.login) {
				window.location = data.login;
			} else if(data.error) {
				Pins.error(data.error);
			}
		},'json');
	}
	<?php } ?>

	<?php if($this->instagram_enable) { ?>
	$('#instagram_connect').switcherSlider({
		text: {
			on: '<?php echo $this->translate('ON');?>',
			off: '<?php echo $this->translate('OFF');?>'
		},
		onSwitch: instagram_connect
	});

	function instagram_connect(item) {
		$.post('<?php echo $this->instagram_connect;?>', {instagram_connect: (item.checked?'on':'off')}, function(data){

			if(data.connected) {
				if(data.connected != (item.checked?'on':'off')) {
					$('#instagram_connect').switcherSlider( data.connected ? 'on_without_callback' : 'off_without_callback' );
				}

				if(data.connected == 'on') {
					$('#instagram_fetch').show();
				} else {
					$('#instagram_fetch').hide();
				}
			} else if(data.login) {
				window.location = data.login;
			} else if(data.error) {
				Pins.error(data.error);
			}
		},'json');
	}

	/*$('#instagram_fetch a').click(function(){
		var element = $(this);
		$.get('<?php echo $this->instagram_fetch_cron;?>', function(){
			window.location = element.attr('href');
		});
		return false;
	});*/
	<?php } ?>

	<?php if($this->facebook_enable) { ?>
	$('#facebook_connect').switcherSlider({
			text: {
				on: '<?php echo $this->translate('ON');?>',
				off: '<?php echo $this->translate('OFF');?>'
			},
			onSwitch: facebook_connect
	});

	function facebook_connect(item) {
		$.post('<?php echo $this->facebook_connect;?>', {facebook_connect: (item.checked?'on':'off')}, function(data){

			if(data.connected) {
				if(data.connected != (item.checked?'on':'off')) {
					$('#facebook_connect').switcherSlider( data.connected ? 'on_without_callback' : 'off_without_callback' );
				}

				
				if(data.connected == 'on') {
					window.location.reload();
				} else {
					$('label[for=facebook_timeline], #find_facebook_friends, a.refresh_user_image').hide();
				}
			} else if(data.login) {
				window.location = data.login;
			} else if(data.error) {
				Pins.error(data.error);
			}
		},'json');
	}


	$('#facebook_timeline').switcherSlider({
		text: {
			on: '<?php echo $this->translate('ON');?>',
			off: '<?php echo $this->translate('OFF');?>'
		},
		onSwitch: function(item){
			if(item.checked) {
				Facebook.startFacebookConnect("<?php echo $this->facebook_connect2;?>","publish_actions", true, true, "<?php echo $this->facebook_connect2;?>");
			} else {
				$.post('<?php echo $this->facebook_connect2;?>');
			}
		}
	});
	
	<?php } ?>

	$('#delete_user_account').click(function(){
		$('#DeleteForm').show();
		$(this).hide();
		return false;
	});

	$('#ChangeOfHeart').click(function(){
		$('#delete_user_account').show();
		$('#DeleteForm').hide();
		return false;
	});

	$('#enable_button').change(function(){
		if($(this).is(':checked')) {
			$('.StaticForm .RedButton.DeleteButton').removeClass('disabled');
		} else {
			$('.StaticForm .RedButton.DeleteButton').addClass('disabled');
		}
	}).change();

	$('#id_about').jqEasyCounter({
		holder: '#aboutCount',
		maxChars: 200,
		maxCharsWarning: 170,
		template: '{count}'
	});

	$('a.refresh_user_image').click(function(){
		$(".current_avatar_wrapper .spinner").show().css({opacity: 1});
		$(".current_avatar_wrapper .current_avatar").hide();
		$.post('<?php echo $this->facebook_connect_avatar;?>', function(json){
			if (json.error) {
				Pins.error(json.error)
			} else if (json.success) {
				var image = new Image();
				image.src = json.success;
				image.onload = function(){
					$('.current_avatar_wrapper .current_avatar').attr('src', image.src).show();
					$(".current_avatar_wrapper .spinner").hide().css({opacity: 0});
				}
				image.onerror = function(a){
					$('.current_avatar_wrapper .current_avatar').show();
					$(".current_avatar_wrapper .spinner").hide().css({opacity: 0});
				}
			} else {
				$('.current_avatar_wrapper .current_avatar').show();
				$(".current_avatar_wrapper .spinner").hide().css({opacity: 0});
			}
		}, 'json');
	});

	<?php if($this->successfu_edite) { ?>
	Pins.success('<?php echo $this->translate('Information is successfully changed!');?>');
	<?php } ?>
	<?php if($this->error) { ?>
	Pins.error('<?php echo $this->error;?>');
	<?php } ?>

	$('#enable_button').click(function(){
		if($(this).is(':checked')) {
			$('#delete_user_account_confirm').removeClass('disabled').unbind('click');
		} else {
			$('#delete_user_account_confirm').addClass('disabled').unbind('click').click(function(){ return false; });
		}
	});
	
	$('#delete_user_account_confirm').unbind('click').click(function(){ return false; });

	$('#id_username').checkAvailable({
		'url' : '<?php echo $this->check_username;?>',
		'holder': '.help_text.username_available'
	});
	
});
//--></script>
<?php $this->placeholder('inhead', ob_get_clean());?>

<script type="text/javascript">
$(document).ready(function(){
	$('#category_id-select<?php echo ($this->is_edit?'-edit':'');?>').selectBox({
		onOpen: function (inst) {
                    try
                    {
			console.log("open", inst);
                    }
                    catch(e)
                    {
                        if (window.console // check for window.console not console
                            && window.console.log)
                        {
                            window.console.log("open", inst);
                        }                        
                    }
		},
		onClose: function (inst) {
                    try
                    {
			console.log("close", inst);
                    }
                    catch(e)
                    {
                        if (window.console // check for window.console not console
                            && window.console.log)
                        {
                            window.console.log("close", inst);
                        }                        
                    }
                        
		}
	});
	$('#type_user-select<?php echo ($this->is_edit?'-edit':'');?>').selectBox({
		onOpen: function (inst) {
                    try
                    {
			console.log("open", inst);
                    }
                    catch(e)
                    {
                        if (window.console // check for window.console not console
                            && window.console.log)
                        {
                            window.console.log("open", inst);
                        }                        
                    }
		},
		onClose: function (inst) {
                    try
                    {
			console.log("close", inst);
                    }
                    catch(e)
                    {
                        if (window.console // check for window.console not console
                            && window.console.log)
                        {
                            window.console.log("close", inst);
                        }                        
                    }
                        
		}
	});        
	$('input.collaborator_name').clearOnFocus();

	
	var cache = {};
	$('.collaborator_name.ui-autocomplete-input').live('keyup', function(){
		var val = this.value;
		if(cache[val]) {
			autocompleteResults(cache[val]);
		} else {
			$.post('<?php echo $this->friends_href;?>', {term: val}, function(data){
				cache[val] = data.users;
				autocompleteResults(data.users);
			}, 'json');
		}
	}).after('<div class="menu_friends" style="position: absolute; display: none; margin-top: 33px;z-index:2147483647;">');
	
	function autocompleteResults(data) {

		var holder = $('.menu_friends').empty();
		if($(data).objectSize() < 1) {
			holder.hide();
			return;
		}
		holder.show(function(){
			$(document).unbind('.joauto').bind('click.joauto',function(e){
				holder.hide();
			});
		});
		$(data).each(function(i, item){
			user = $('<div class="option_friends"><img alt="'+item.label+'" src="'+item.image+'"><span>'+item.label+'</span></div>').click(function(){
				holder.hide();
				if( $('#user_fr_'+item.value+'<?php echo ($this->is_edit?'-edit':'');?>').size() > 0 ) { return; }
				$('input.collaborator_name').val('');
				$('#invite_response<?php echo ($this->is_edit?'-edit':'');?>').append('<input id="hidden_user_fr_'+item.value+'<?php echo ($this->is_edit?'-edit':'');?>" type="hidden" name="friends['+item.value+']" value="'+item.value+'" />');

				template = $('#friend-template<?php echo ($this->is_edit?'-edit':'');?>').html();
				for(e in item) {
					template = template.replace(new RegExp(RegExp.quote('{'+e+'}'), 'g'), item[e]);
				}
				
				$('#CurrentCollaborators<?php echo ($this->is_edit?'-edit':'');?>').append(template);
			}).css({'cursor': 'pointer'});
			
			holder.append(user);
		});
	}

	RegExp.quote = function(str) {
	    return (str+'').replace(/([.?*+^$[\]\\(){}|-])/g, "\\$1");
	};
		
	
});

function saveBoardData() {
	
	$.post('<?php echo $this->form_action;?>', $('#CreateBoard<?php echo ($this->is_edit?'-edit':'');?>').serialize(), function(data){
		if(data.error) {
			Pins.error(data.error);
		} else if(data.data) {
			window.location = data.data.href;
		}
	}, 'json');
	return false;
}

function deleteFriend(id) {
	$('#user_fr_'+id+'<?php echo ($this->is_edit?'-edit':'');?>').remove();
	$('#hidden_user_fr_'+id+'<?php echo ($this->is_edit?'-edit':'');?>').remove();
}


$(document).ready(function(){
    /*
	$(".selectBox.selectBox-dropdown").bind('click',function(event){
		$('ul.hidden').hide();
		event.preventDefault();
		$(".selectBox.selectBox-dropdown").hide();
		$(".selectBox-dropdown-menu.selectBox-options").show();

		$(".master").unbind('click').bind('click',function(event){
			event.preventDefault();

			
			var children  = $(this).find($('ul'));
			if(children.hasClass('opened')){
				children.hide().removeClass('opened');
			
				
			}else{

			$(".hidden").hide();
			var self  = $(this);
			children.addClass('opened');


			if($(children).hasClass('hidden')){
				try
                                {
                                    console.log("OK");
                                }
                                catch(e)
                                {
                                    if (window.console // check for window.console not console
                                        && window.console.log)
                                    {
                                        window.console.log("OK");
                                    }

                                }
				children.show();
				children.find('li a').click(function(event){
						event.preventDefault();
						appendElementInMain($(this));
						$(".hidden").hide();
				});
			}else{
				
				appendElementInMain(self.find($('a')));
				
			}

			}
		});
	

		function appendElementInMain(element){
			$(".selectBox-dropdown-menu.selectBox-options").hide();
			$(".selectBox.selectBox-dropdown").show();
			$(".selectBox-label").text(element.text());
			$("#catId").val(element.data("id"));
			
			}

		
	});
        */

	$("#selectBox-dropdown-menu-Category1").bind('mouseleave',function(event){
        		$("#selectBox-Category1").show();
                	$("#selectBox-dropdown-menu-Category1").hide();

        });


	$("#selectBox-Category1").bind('click',function(event){
		$('ul.hidden').hide();
		event.preventDefault();
		$("#selectBox-Category1").hide();
		$("#selectBox-dropdown-menu-Category1").show();
                
                if (!$("#selectBox-Category2").is(":visible"))  
                    {
        		$("#selectBox-Category2").show();
                	$("#selectBox-dropdown-menu-Category2").hide();
                    }
                if (!$("#selectBox-Category3").is(":visible"))  
                    {
        		$("#selectBox-Category3").show();
                	$("#selectBox-dropdown-menu-Category3").hide();
                    }
                if (!$("#selectBox-TypeUser").is(":visible"))  
                    {
                        $("#selectBox-TypeUser").show();
                        $("#selectBox-TypeUser-dropdown-menu").hide();
                    }
                
                /*
		$(".master").bind('click',function(event){
                    alert("o");
                            event.preventDefault();
                            var self  = $(this);
            		appendElementInMain(self.find($('a')));
				
		});
*/
		$(".cats-category1").bind('click',function(event){
                            event.preventDefault();
                            var self  = $(this);
               		appendElementInMain(self);
		});

                
		//$(".master").unbind('click').bind('click',function(event){
                $(".master.cat1").bind('mouseenter',function(event){

                        event.preventDefault();

			
			var children  = $(this).find($('ul'));
			if(children.hasClass('opened')){
				children.hide().removeClass('opened');
			
				
			}else{

			$(".hidden").hide();
			var self  = $(this);
			children.addClass('opened');


			if($(children).hasClass('hidden')){
				try
                                {
                                    console.log("OK");
                                }
                                catch(e)
                                {
                                    if (window.console // check for window.console not console
                                        && window.console.log)
                                    {
                                        window.console.log("OK");
                                    }

                                }
				children.show();
				children.find('li a').click(function(event){
						event.preventDefault();
						appendElementInMain($(this));
						$(".hidden").hide();
				});
			}else{
				
				appendElementInMain(self.find($('a')));
				
			}

			}
		});
	

		function appendElementInMain(element){
			$("#selectBox-dropdown-menu-Category1").hide();
			$("#selectBox-Category1").show();
			$("#selectBox-label-Category1").text(element.text());
			$("#catId1").val(element.data("id"));
			
			}
	});
        
	$("#selectBox-dropdown-menu-Category2").bind('mouseleave',function(event){
        		$("#selectBox-Category2").show();
                	$("#selectBox-dropdown-menu-Category2").hide();

        });
       

	$("#selectBox-Category2").bind('click',function(event){
		$('ul.hidden').hide();
		event.preventDefault();
		$("#selectBox-Category2").hide();
		$("#selectBox-dropdown-menu-Category2").show();
                
                if (!$("#selectBox-Category1").is(":visible"))  
                    {
        		$("#selectBox-Category1").show();
                	$("#selectBox-dropdown-menu-Category1").hide();
                    }
                if (!$("#selectBox-Category3").is(":visible"))  
                    {
        		$("#selectBox-Category3").show();
                	$("#selectBox-dropdown-menu-Category3").hide();
                    }
                if (!$("#selectBox-TypeUser").is(":visible"))  
                    {
                        $("#selectBox-TypeUser").show();
                        $("#selectBox-TypeUser-dropdown-menu").hide();
                    }

		$(".cats-category2").bind('click',function(event){
                            event.preventDefault();
                            var self  = $(this);
               		appendElementInMain(self);
		});

		//$(".master").unbind('click').bind('click',function(event){
                $(".master.cat2").bind('mouseenter',function(event){

			event.preventDefault();

			
			var children  = $(this).find($('ul'));
			if(children.hasClass('opened')){
				children.hide().removeClass('opened');
			
				
			}else{

			$(".hidden").hide();
			var self  = $(this);
			children.addClass('opened');


			if($(children).hasClass('hidden')){
				try
                                {
                                    console.log("OK");
                                }
                                catch(e)
                                {
                                    if (window.console // check for window.console not console
                                        && window.console.log)
                                    {
                                        window.console.log("OK");
                                    }

                                }
				children.show();
				children.find('li a').click(function(event){
						event.preventDefault();
						appendElementInMain($(this));
						$(".hidden").hide();
				});
			}else{
				
				appendElementInMain(self.find($('a')));
				
			}

			}
		});
	

		function appendElementInMain(element){
			$("#selectBox-dropdown-menu-Category2").hide();
			$("#selectBox-Category2").show();
			$("#selectBox-label-Category2").text(element.text());
			$("#catId2").val(element.data("id"));
			
			}
        });	
        
        
	$("#selectBox-dropdown-menu-Category3").bind('mouseleave',function(event){
        		$("#selectBox-Category3").show();
                	$("#selectBox-dropdown-menu-Category3").hide();

        });
        
        
        $("#selectBox-Category3").bind('click',function(event){
		$('ul.hidden').hide();
		event.preventDefault();
		$("#selectBox-Category3").hide();
		$("#selectBox-dropdown-menu-Category3").show();
                
                if (!$("#selectBox-Category2").is(":visible"))  
                    {
        		$("#selectBox-Category2").show();
                	$("#selectBox-dropdown-menu-Category2").hide();
                    }
                if (!$("#selectBox-Category1").is(":visible"))  
                    {
        		$("#selectBox-Category1").show();
                	$("#selectBox-dropdown-menu-Category1").hide();
                    }
                
                if (!$("#selectBox-TypeUser").is(":visible"))  
                    {
                        $("#selectBox-TypeUser").show();
                        $("#selectBox-TypeUser-dropdown-menu").hide();
                    }
                    
                
		$(".cats-category3").bind('click',function(event){
                            event.preventDefault();
                            var self  = $(this);
               		appendElementInMain(self);
		});

		//$(".master").unbind('click').bind('click',function(event){
                $(".master.cat3").bind('mouseenter',function(event){

			event.preventDefault();
                        

			var children  = $(this).find($('ul'));
			if(children.hasClass('opened')){
				children.hide().removeClass('opened');
				
			}else{
                            
                            

                            $(".hidden").hide();
                            var self  = $(this);
                            children.addClass('opened');

                            if($(children).hasClass('hidden')){
                                    try
                                    {
                                        console.log("Tiene hidden");
                                    }
                                    catch(e)
                                    {
                                        if (window.console // check for window.console not console
                                            && window.console.log)
                                        {
                                            window.console.log("Tiene hidden2");
                                        }

                                    }
                                    children.show();
                                    children.find('li a').click(function(event){
                                                    event.preventDefault();
                                                    appendElementInMain($(this));
                                                    $(".hidden").hide();
                                    });
                            }else{

                                    appendElementInMain(self.find($('a')));
                                    console.log("ADD");

                            }

			}
		});

		function appendElementInMain(element){
			$("#selectBox-dropdown-menu-Category3").hide();
			$("#selectBox-Category3").show();
			$("#selectBox-label-Category3").text(element.text());
			$("#catId3").val(element.data("id"));
			
			}
	});

	$("#selectBox-TypeUser-dropdown-menu").bind('mouseleave',function(event){
                        $("#selectBox-TypeUser").show();
                        $("#selectBox-TypeUser-dropdown-menu").hide();

        });

	$("#selectBox-TypeUser").bind('click',function(event){
		$('ul.hidden').hide();
		event.preventDefault();
		$("#selectBox-TypeUser").hide();
		$("#selectBox-TypeUser-dropdown-menu").show();

                if (!$("#selectBox-Category1").is(":visible"))  
                    {
        		$("#selectBox-Category1").show();
                	$("#selectBox-dropdown-menu-Category1").hide();
                    }
                if (!$("#selectBox-Category2").is(":visible"))  
                    {
        		$("#selectBox-Category2").show();
                	$("#selectBox-dropdown-menu-Category2").hide();
                    }
                if (!$("#selectBox-Category3").is(":visible"))  
                    {
        		$("#selectBox-Category3").show();
                	$("#selectBox-dropdown-menu-Category3").hide();
                    }
                  
                  /*
		$(".cats-typeuser").bind('click',function(event){
                            event.preventDefault();
                            var self  = $(this);
               		appendElementInMain(self);
		});
                */    
                    
		$(".master").unbind('click').bind('click',function(event){
                //$(".master.typeuser").bind('mouseenter',function(event){
			event.preventDefault();

			var children  = $(this).find($('ul'));
			if(children.hasClass('opened')){
                            
				children.hide().removeClass('opened');
				
			}else{

                            $(".hidden").hide();
                            var self  = $(this);
                            children.addClass('opened');

                            if($(children).hasClass('hidden')){
                                    try
                                    {
                                        console.log("OK");
                                    }
                                    catch(e)
                                    {
                                        if (window.console // check for window.console not console
                                            && window.console.log)
                                        {
                                            window.console.log("OK");
                                        }

                                    }
                                    children.show();
                                    children.find('li a').click(function(event){
                                                    event.preventDefault();
                                                    appendElementInMain($(this));
                                                    $(".hidden").hide();
                                    });
                            }else{
        //console.log("ADD");
                                    appendElementInMain(self.find($('a')));

                            }

			}
		});
  
		function appendElementInMain(element){
			$("#selectBox-TypeUser-dropdown-menu").hide();
			$("#selectBox-TypeUser").show();
			$("#selectBox-label-TypeUser").text(element.text());
			$("#user_typeId").val(element.data("id"));
			
			}


		
	});

	
        
        $("#searchTextField").bind('focusout',function(event){
            $('.editpage_submit').attr('disabled', true).addClass('disabled');        
            GLoad();
        });
        
        $("#searchTextField").change(function() {
            $('.editpage_submit').attr('disabled', true).addClass('disabled');            
            GLoad();
        });
        
        $(".pac-container").live('click',function(event){
            $('.editpage_submit').attr('disabled', true).addClass('disabled');            
            GLoad();
        });

        $("#searchTextField").blur(function() {
            $('.editpage_submit').attr('disabled', true).addClass('disabled');            
            GLoad();
        });

        
	return;
});

</script>

<script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false&libraries=places&language=es"></script>    
    <script>
function initialize() {
  var mapOptions = {
    center: new google.maps.LatLng(-33.8688, 151.2195),
    zoom: 13,
    mapTypeId: google.maps.MapTypeId.ROADMAP
  };
  var map = new google.maps.Map(document.getElementById('map-canvas'),
    mapOptions);

  var input = /** @type {HTMLInputElement} */(document.getElementById('searchTextField'));
  var autocomplete = new google.maps.places.Autocomplete(input);

  autocomplete.bindTo('bounds', map);

  var infowindow = new google.maps.InfoWindow();
  var marker = new google.maps.Marker({
    map: map
  });


  google.maps.event.addListener(autocomplete, 'place_changed', function() {
    infowindow.close();
    marker.setVisible(false);
    input.className = '';
    var place = autocomplete.getPlace();
    if (!place.geometry) {
      // Inform the user that the place was not found and return.
      input.className = 'notfound';
      return;
    }

    // If the place has a geometry, then present it on a map.
    if (place.geometry.viewport) {
      map.fitBounds(place.geometry.viewport);
    } else {
      map.setCenter(place.geometry.location);
      map.setZoom(17);  // Why 17? Because it looks good.
    }
    marker.setIcon(/** @type {google.maps.Icon} */({
      url: place.icon,
      size: new google.maps.Size(71, 71),
      origin: new google.maps.Point(0, 0),
      anchor: new google.maps.Point(17, 34),
      scaledSize: new google.maps.Size(35, 35)
    }));
    marker.setPosition(place.geometry.location);
    marker.setVisible(true);

    var address = '';
    if (place.address_components) {
      address = [
        (place.address_components[0] && place.address_components[0].short_name || ''),
        (place.address_components[1] && place.address_components[1].short_name || ''),
        (place.address_components[2] && place.address_components[2].short_name || '')
      ].join(' ');
    }

    infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);
    infowindow.open(map, marker);
  });

    GLoad(); 
  // Sets a listener on a radio button to change the filter type on Places
  // Autocomplete.
  function setupClickListener(id, types) {
    var radioButton = document.getElementById(id);
    google.maps.event.addDomListener(radioButton, 'click', function() {
      autocomplete.setTypes(types);
    });
  }

  setupClickListener('changetype-all', []);
  setupClickListener('changetype-establishment', ['establishment']);
  setupClickListener('changetype-geocode', ['geocode']);
}

google.maps.event.addDomListener(window, 'load', initialize);

    </script>

    <!-- AIzaSyD_Dei2f6nMzaMrBwAXFVxjuHnHz-3So4I -->
<script src="http://maps.google.com/maps?file=api&amp;v=3&amp;key=AIzaSyA60eSDixfIlHokj6GbjmqiRUN0GlBOTAM"
      type="text/javascript"></script>
      
<!--script src="http://maps.google.com/maps/api/js?sensor=false" type="text/javascript"></script-->      
    <script type="text/javascript">
   
   /*     
    var locations = [
      ['madriles', 40.4284034, -3.7149525, 1]
    ];      
      */



function GLoad() {




var geocoder;
var map;

                    $(document).ready(function(){ 
                        
                                              
                var locationPrincipal =$('#searchTextField').val();

         


                var geocoder = new google.maps.Geocoder();
                geocoder.geocode({ 'address': locationPrincipal }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) 
                {
                    var lat = results[0].geometry.location.lat().toString().substr(0, 12);
                    var len = results[0].geometry.location.lng().toString().substr(0, 12);
                    $('#lat').val(lat);
                    $('#len').val(len);

                }
                else
                {
                    try
                    {
                        console.log('error: ' + status);
                    }
                    catch(e)
                    {
                        if (window.console // check for window.console not console
                            && window.console.log)
                        {
                            window.console.log('error: ' + status);
                        }

                    }
                }

                cambiadisabled();
              });
              
              
            });  

function cambiadisabled()
{

 $(document).ready(function(){                                                   

    $('.morelocations').attr('disabled', false).removeClass('disabled');  
    $('.register').attr('disabled', false).removeClass('disabled');
    //$('.register input').removeAttr('disabled');

 }); 
 
 }
            
function pausecomp(ms) {
        ms += new Date().getTime();
        while (new Date() < ms){}
    } 
            
}

    </script>    



<?php echo $this->footer_part; ?>